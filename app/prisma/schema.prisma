// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int  @id @default(autoincrement())
  email String @unique
  password String
  userName String @unique
  profilePic String?
  quizzes Quiz[]
  quizzesMade Int?
  quizzesCompleted Int?
}

model Quiz {
  id Int @id @default(autoincrement())
  createdById Int
  title String?
 createdBy User @relation(fields: [createdById], references:[id],onDelete: Cascade)
  difficulty Difficulty?
   status      QuizStatus @default(DRAFT)
  createdAt DateTime @default(now())
  questions Question[]
}

model Question {
  id Int @id @default(autoincrement())
  content String 
  quizId Int
  quiz Quiz @relation(fields: [quizId], references:[id],onDelete: Cascade)
  options Option[]
}

model Option {
  id Int @id @default(autoincrement())
  content String
  isCorrect Boolean
  questionId Int
 question  Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum QuizStatus{
  DRAFT
  PUBLISHED
}